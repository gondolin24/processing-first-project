ArrayList < CustomRectangle > redVeritcleTriangles = new ArrayList < CustomRectangle > ();
ArrayList < CustomRectangle > blueVeritcleTriangles = new ArrayList < CustomRectangle > ();
ArrayList < CustomRectangle > blueVeritcleTriangles2 = new ArrayList < CustomRectangle > ();
ArrayList < CustomRectangle > triangleGroup3 = new ArrayList < CustomRectangle > ();
ArrayList < CustomRectangle > triangleGroup4 = new ArrayList < CustomRectangle > ();
ArrayList < CustomRectangle > triangleGroup5 = new ArrayList < CustomRectangle > ();
ArrayList < CustomEllipse > ellipseGroup = new ArrayList < CustomEllipse > ();

void setup() {
 size(540, 660);
 displayBackground();
 noStroke();
 initializeRedTriangles();
 initializeBlueTriangles();
 initializeGroup3Triangles();
 initializeGroup4Triangles();
 initializeGroup5Triangles();
 initializeEllipseGroup();

}

void initializeEllipseGroup() {
 ColorClass col = new ColorClass(19, 0, 124);
 StrokeClass st = new StrokeClass(19, 0, 124);
 ellipseGroup.add(new CustomEllipse(col, st, 27, 645, 50, 50));
 ellipseGroup.add(new CustomEllipse(col, st, 87, 645, 50, 50));
 ellipseGroup.add(new CustomEllipse(col, st, 147, 645, 50, 50));
 ellipseGroup.add(new CustomEllipse(col, st, 27, 590, 45, 45));
 ellipseGroup.add(new CustomEllipse(col, st, 87, 590, 45, 45));
 ellipseGroup.add(new CustomEllipse(col, st, 147, 590, 45, 45));
 ellipseGroup.add(new CustomEllipse(col, st, 27, 530, 40, 40));
 ellipseGroup.add(new CustomEllipse(col, st, 87, 530, 40, 40));
 ellipseGroup.add(new CustomEllipse(col, st, 147, 530, 40, 40));
 ellipseGroup.add(new CustomEllipse(col, st, 27, 465, 35, 35));
 ellipseGroup.add(new CustomEllipse(col, st, 87, 465, 35, 35));
 ellipseGroup.add(new CustomEllipse(col, st, 147, 465, 35, 35));
 ellipseGroup.add(new CustomEllipse(col, st, 27, 386, 30, 30));
 ellipseGroup.add(new CustomEllipse(col, st, 87, 386, 30, 30));
 ellipseGroup.add(new CustomEllipse(col, st, 147, 386, 30, 30));
 ellipseGroup.add(new CustomEllipse(col, st, 27, 290, 25, 25));
 ellipseGroup.add(new CustomEllipse(col, st, 87, 290, 25, 25));
 ellipseGroup.add(new CustomEllipse(col, st, 147, 290, 25, 25));
 ellipseGroup.add(new CustomEllipse(col, st, 27, 200, 20, 20));
 ellipseGroup.add(new CustomEllipse(col, st, 87, 200, 20, 20));
 ellipseGroup.add(new CustomEllipse(col, st, 147, 200, 20, 20));
 ellipseGroup.add(new CustomEllipse(col, st, 27, 95, 20, 20));
 ellipseGroup.add(new CustomEllipse(col, st, 87, 95, 20, 20));
 ellipseGroup.add(new CustomEllipse(col, st, 147, 95, 20, 20));
 ellipseGroup.add(new CustomEllipse(col, st, 27, 0, 20, 20));
 ellipseGroup.add(new CustomEllipse(col, st, 87, 0, 20, 20));
 ellipseGroup.add(new CustomEllipse(col, st, 147, 0, 20, 20));
}
void initializeGroup3Triangles() {
 ColorClass col = new ColorClass(249, 19, 2);
 StrokeClass st = new StrokeClass(212, 22, 14);
 triangleGroup3.add(new CustomRectangle(col, st, 63, 333, 70, 1));
}

void initializeGroup4Triangles() {
 ColorClass col = new ColorClass(236, 25, 128);
 StrokeClass st = new StrokeClass(236, 25, 128);
 triangleGroup4.add(new CustomRectangle(col, st, 195, 536, 100, 200));
}
void initializeGroup5Triangles() {
 ColorClass col = new ColorClass(0, 0, 100);
 StrokeClass st = new StrokeClass(0, 0, 100);
 triangleGroup5.add(new CustomRectangle(col, st, 169, 280, 15, 60));
 triangleGroup5.add(new CustomRectangle(col, st, 305, 253, 15, 50));
 triangleGroup5.add(new CustomRectangle(col, st, 452, 285, 4, 60));
 triangleGroup5.add(new CustomRectangle(col, st, 470, 285, 20, 25));
 triangleGroup5.add(new CustomRectangle(col, st, 515, 285, 13, 15));

}

void initializeBlueTriangles() {
 ColorClass blue = new ColorClass(19, 0, 124);
 StrokeClass st = new StrokeClass(19, 0, 124);
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 450, 30, 40, 5));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 410, 30, 5, 5));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 330, 10, 5, 5));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 530, 60, 2, 40));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 510, 100, 7, 7));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 520, 250, 40, 10));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 520, 270, 1, 10));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 530, 280, 10, 1));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 535, 285, 5, 1));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 440, 210, 10, 10));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 460, 70, 2, 2));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 480, 255, 30, 3));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 400, 60, 5, 10));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 460, 253, 5, 5));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 434, 265, 30, 2));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 420, 250, 2, 15));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 395, 250, 6, 27));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 395, 215, 20, 5));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 370, 60, 2, 3));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 310, 50, 2, 4));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 340, 140, 15, 2));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 340, 276, 25, 2));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 365, 285, 2, 3));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 340, 295, 2, 8));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 330, 240, 4, 15));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 290, 140, 3, 15));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 276, 175, 20, 5));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 290, 10, 1, 1));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 250, 10, 1, 1));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 270, 210, 2, 25));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 300, 330, 2, 2));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 257, 260, 25, 6));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 240, 220, 4, 4));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 240, 160, 15, 10));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 220, 50, 3, 2));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 140, 230, 55, 3));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 185, 200, 2, 15));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 185, 155, 3, 5));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 195, 175, 2, 3));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 165, 45, 2, 3));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 140, 40, 2, 15));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 140, 140, 2, 4));
 blueVeritcleTriangles.add(new CustomRectangle(blue, st, 100, 150, 4, 2));

 //group 2
 blueVeritcleTriangles2.add(new CustomRectangle(blue, st, 475, 335, 2, 3));
 blueVeritcleTriangles2.add(new CustomRectangle(blue, st, 450, 375, 10, 2));
 blueVeritcleTriangles2.add(new CustomRectangle(blue, st, 440, 340, 2, 7));
 blueVeritcleTriangles2.add(new CustomRectangle(blue, st, 430, 360, 1, 10));
 blueVeritcleTriangles2.add(new CustomRectangle(blue, st, 318, 325, 2, 2));
 blueVeritcleTriangles2.add(new CustomRectangle(blue, st, 220, 315, 4, 6));
 blueVeritcleTriangles2.add(new CustomRectangle(blue, st, 210, 330, 1, 6));
}
void initializeRedTriangles() {
 ColorClass red = new ColorClass(249, 19, 2);
 StrokeClass st = new StrokeClass(249, 19, 2);
 int l = 8;
 float v1 = 10;
 float v2 = 5;
 for (int i = 0; i < l; i++) {
  redVeritcleTriangles.add(new CustomRectangle(red, st, v1, 346, v2, 132));
  v1 = v1 + 15;
  v2 = v2 - 0.5;
 }
 l = 15;
 for (int i = 0; i < l; i++) {
  redVeritcleTriangles.add(new CustomRectangle(red, st, v1, 346, 1, 132));
  v1 = v1 + 15;
 }
}


void draw() {

 displayLayerOne();
 displayTriangles();
 displayBackground();
 toggleEyes();
 displayOtherTriangles();
}

void displayLayerOne() {
 background(241, 252, 41);


 fill(90, 161, 202);
 textSize(230);
 text("ME", 250, 670);
 text("ME", 250, 545);
 text("ME", 250, 460);
 fill(0, 0, 0);
 textSize(20);
 text("I'D", 20, 340);
 text("YOU", 150, 340);
 text("THE", 20, 300);
 text("CRACKLE", 130, 300);
 text("OF A", 290, 300);
 text("FIREPLACE", 440, 300);
}

void displayTriangles() {
 for (CustomRectangle redT: redVeritcleTriangles) {

  redT.move(mouseX - (width / 2), .4 * (mouseY - height));
 }

 for (CustomRectangle tg5: triangleGroup5) {

  tg5.move(0, mouseY - (height / 2));
 }
 for (CustomRectangle tg3: triangleGroup3) {
  tg3.display();

 }
 for (CustomRectangle tg4: triangleGroup4) {
  tg4.display();

 }
}


void displayOtherTriangles() {
 for (CustomRectangle blueT: blueVeritcleTriangles) {
  blueT.move(.04 * (mouseX - (width / 2)), 0);
 }
 for (CustomRectangle blueT2: blueVeritcleTriangles2) {
  blueT2.move(0, (height / 2) - mouseY);
 }
 for (CustomEllipse eg: ellipseGroup) {
  eg.move(.5 * (mouseX - (width / 2)));
 }

}
void displayBackground() {

 fill(236, 25, 128);
 textSize(230);
 text("I", -22, 150);
 text("AM", 210, 150);

 fill(90, 161, 202);
 textSize(230);
 text("I", -22, 360);
 text("I", -22, 360);
 text("I", -22, 570);
 text("I", -22, 780);




 fill(249, 19, 2);
 textSize(20);
 text("BURN", 70, 340);

 fill(236, 25, 128);
 textSize(230);
 text("ME", 260, 670);

 fill(0, 0, 0);
 textSize(25);
 text("COULDN'T", 5, 505);
 text("TAKE", 290, 505);
 text("YOUR", 470, 505);
 text("OFF", 490, 535);

 fill(225, 225, 225);
 textSize(20);
 text("C", 170, 300);
 text("F", 307, 300);
 text("EP", 470, 300);
 text("C", 515, 300);

}

boolean eyeToggle = false;
void toggleEyes() {

 if (eyeToggle) {
  fill(0, 0, 0);
  textSize(25);
  text("EYES", 195, 555);
  text("EYES", 195, 575);
  text("EYES", 195, 595);
  text("EYES", 195, 615);
  text("EYES", 195, 635);
  text("EYES", 195, 655);
  fill(225, 225, 225);
  textSize(25);
  text("EYES", 195, 535);
  eyeToggle = false;
 } else {
  fill(0, 0, 0);
  textSize(25);
  text("EYES", 195, 535);
  fill(225, 225, 225);
  textSize(25);
  text("EYES", 195, 555);
  text("EYES", 195, 575);
  text("EYES", 195, 595);
  text("EYES", 195, 615);
  text("EYES", 195, 635);
  text("EYES", 195, 655);
  eyeToggle = true;
 }
}

//color class
class ColorClass {
 int R;
 int G;
 int B;
 ColorClass(int red, int green, int blue) {
  R = red;
  G = green;
  B = blue;
 }

 int getRed() {
  return R;
 }
 int getBlue() {
  return B;
 }
 int getGreen() {
  return G;
 }
}


//Stroke class
class StrokeClass {
 float v1;
 float v2;
 float v3;
 StrokeClass(float sv1, float sv2, float sv3) {
  v1 = sv1;
  v2 = sv2;
  v3 = sv3;
 }

 float getV1() {
  return v1;
 }
 float getV2() {
  return v2;
 }
 float getV3() {
  return v3;
 }
}


class CustomRectangle {
 //color
 ColorClass shapeColor;
 //stroke
 StrokeClass shapeStoke;
 //rectangle stuff
 float size;
 float length;
 float width;
 float height;
 float xpos; // rect xposition
 float ypos; // rect xposition
 CustomRectangle(ColorClass shapeC, StrokeClass shapeSt, float s, float l, float w, float h) {
  shapeStoke = shapeSt;
  shapeColor = shapeC;
  size = s;
  length = l;
  width = w;
  height = h;
  xpos = 0;
  ypos = 0;
 }
 void move(float posX, float posY) {
  xpos = posX;
  ypos = posY;
  display();
 }

 void display() {
  fill(shapeColor.getRed(), shapeColor.getGreen(), shapeColor.getBlue());
  stroke(shapeStoke.getV1(), shapeStoke.getV2(), shapeStoke.getV3());
  rect(size + xpos, length + ypos, width, height);
 }
}


class CustomEllipse {
 //color
 ColorClass shapeColor;
 //stroke
 StrokeClass shapeStoke;
 //rectangle stuff
 float size;
 float length;
 float width;
 float height;
 //moving
 float xpos; // rect xposition
 CustomEllipse(ColorClass shapeC, StrokeClass shapeSt, float s, float l, float w, float h) {
  shapeStoke = shapeSt;
  shapeColor = shapeC;
  size = s;
  length = l;
  width = w;
  height = h;
  xpos = 0;
 }


 void display() {
  fill(shapeColor.getRed(), shapeColor.getGreen(), shapeColor.getBlue());
  stroke(shapeStoke.getV1(), shapeStoke.getV2(), shapeStoke.getV3());
  //ellipse(size, length, width, height);
  ellipse(size + xpos, length, width, height);
 }

 void move(float posX) {
  xpos = posX;
  display();
 }

}
